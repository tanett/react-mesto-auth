{"version":3,"sources":["images/svg/Logo-mesto.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","utils/auth.js","components/Login.js","components/Register.js","components/ImagePopup.js","utils/api.js","utils/constants.js","components/ProtectedRoute.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/AskDeletePopup.js","components/InfoTooltip.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","React","useState","mobMenu","setMobMenu","className","src","logoPath","alt","exact","path","to","onClick","userEmail","onOutClick","CurrentUserContext","createContext","Card","user","useContext","isOwn","dataCard","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","id","name","link","title","onCardClick","type","onCardLike","length","onCardDelete","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","card","Footer","AUTH_URL","Login","setUserEmail","password","setPassword","history","useHistory","onSubmit","e","preventDefault","isLogin","then","data","token","push","catch","err","console","log","value","placeholder","required","onChange","target","minLength","maxLength","Register","email","setEmail","onRegister","ImagePopup","useEffect","isOpen","document","addEventListener","onCloseEsc","removeEventListener","onCloseOverlay","onClose","api","querySelector","options","this","_baseUrl","baseUrl","_headers","headers","fetch","method","res","ok","json","Promise","reject","status","valuesFromInput","body","JSON","stringify","cardID","hasLike","likeOff","likeOn","authorization","ProtectedRoute","Component","component","loggedIn","PopupWithForm","children","EditProfilePopup","setName","description","setDescription","onUpdateUser","btnText","EditAvatarPopup","inputRef","useRef","current","onUpdateAvatar","ref","AddPlacePopup","namePlace","setNamePlace","setLink","AskDeletePopup","onDeleteSubmit","InfoTooltip","handleEscClose","event","key","message","classList","contains","success","failure","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeletePopupOpen","setIsDeletePopupOpen","isImagePopupOpen","setIsImagePopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","toolTipMessage","setCards","classPageLoad","setClassPageLoad","btnLoader","setBtnLoader","setLoggedIn","resRegistration","setResRegistration","messageToolTip","setMessageToolTip","localStorage","getItem","jwt","handleTokenCheck","all","getInitialCards","getUserInfo","finally","closeAllPopups","handleEscClick","handleOverlayClick","Provider","removeItem","changeLikeCardStatus","newCard","newCards","c","login","setItem","auth","passw","statusCode","Error","editUserInfo","editUserAvatar","addCard","setTimeout","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aba3b9a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo-mesto.a307e1c4.svg\";","import logoPath from '../images/svg/Logo-mesto.svg';\r\nimport {\r\n    Switch, Route, useParams, Link\r\n} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nfunction Header(props) {\r\n    const [mobMenu, setMobMenu] = React.useState(false);\r\n    const handleClicMobMenu = () => {\r\n        setMobMenu(!mobMenu)\r\n    };\r\n    const handleOut =()=>{\r\n        props.onOutClick();\r\n        setMobMenu(false);\r\n    }\r\n\r\n    return (\r\n        <header className={` header ${mobMenu ? \"header_mobileOpen\" : \"\"}`}>\r\n            <img className=\"header__logo\" src={logoPath} alt=\"Лого\"/>\r\n            <Switch>\r\n                <Route exact path=\"/signin\">\r\n                    <Link to=\"/signup\" className=\"header__link\">\r\n                        Регистрация\r\n                    </Link>\r\n                </Route>\r\n                <Route exact path=\"/signup\">\r\n                    <Link to=\"/signin\" className=\"header__link\">\r\n                        Войти\r\n                    </Link>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <div className={`${mobMenu ? \"header__mobMenuBtn_open\" : \"header__mobMenuBtn\"  }`}\r\n                         onClick={handleClicMobMenu}></div>\r\n                    <div className={`${mobMenu ? \"header__userWrap_mobileOpen\" : \"header__userWrap\"}`}>\r\n                        <p className=\"header__userEmail\">{props.userEmail}</p>\r\n                        <Link to=\"/signin\" onClick={handleOut} className=\"header__link header__link_signOut\">Выйти</Link>\r\n                    </div>\r\n\r\n                </Route>\r\n\r\n\r\n            </Switch>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from \"react\";\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext.js\";\r\n\r\nfunction Card(props) {\r\n    const user = React.useContext(CurrentUserContext);\r\n    const handleClick = () => {\r\n        props.onCardClick(props.dataCard);\r\n    }\r\n    const handleLikeClick = () => {\r\n        props.onCardLike(props.dataCard)\r\n    }\r\n    const handleDeleteClick = () => {\r\n        props.onCardDelete(props.dataCard)\r\n    }\r\n\r\n    const isOwn = props.dataCard.owner._id === user._id;\r\n\r\n    const cardDeleteButtonClassName = (\r\n        `photo-grid__trash ${isOwn ? 'photo-grid__trash_visible' : 'photo-grid__trash_hidden'}`\r\n    );\r\n\r\n    const isLiked = props.dataCard.likes.some(i => i._id === user._id);\r\n\r\n    const cardLikeButtonClassName = `photo-grid__like ${isLiked ? 'photo-grid__like_on' : 'photo-grid__like_off'}`;\r\n\r\n    return (\r\n        <figure className=\"photo-grid__item\" id={props.dataCard._id}>\r\n            <div className=\"photo-grid__picture-wrap\">\r\n                <img className=\"photo-grid__picture\" alt={props.dataCard.name} src={props.dataCard.link}\r\n                     title=\"Нажми для просмотра\" onClick={handleClick}/>\r\n            </div>\r\n            <figcaption className=\"photo-grid__item-title \">\r\n                <h2 className=\"photo-grid__item-name\">{props.dataCard.name}</h2>\r\n                <div className=\"photo-grid__like-container\">\r\n                    <button className={cardLikeButtonClassName} type=\"button\" onClick={handleLikeClick}></button>\r\n                    <span className=\"photo-grid__like-count\">{props.dataCard.likes.length}</span>\r\n                </div>\r\n            </figcaption>\r\n            <button className={cardDeleteButtonClassName} type=\"button\" title=\"Удалить\"\r\n                    onClick={handleDeleteClick}></button>\r\n        </figure>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from \"./Card\";\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext.js\";\r\n\r\nfunction Main(props) {\r\n    const user = React.useContext(CurrentUserContext);\r\n\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__wrap\">\r\n                    <div className=\"profile__avatar-wrap\" title=\"Изменить\" onClick={props.onEditAvatar}>\r\n                        <img alt=\"ava\" className=\"profile__avatar-pic\" src={user.avatar}/>\r\n                    </div>\r\n                    <div className=\"profile__about\">\r\n                        <div className=\"profile__title\">\r\n                            <h1 className=\"profile__name\">{user.name}</h1>\r\n                            <button className=\"profile__edit-button\" type=\"button\" title=\"Изменить профиль\"\r\n                                    onClick={props.onEditProfile}></button>\r\n                        </div>\r\n                        <p className=\"profile__descr\">{user.about}</p>\r\n                    </div>\r\n                </div>\r\n                <button className=\"profile__add-button\" type=\"button\" title=\"Добавить картинку\"\r\n                        onClick={props.onAddPlace}></button>\r\n            </section>\r\n            <section className=\"photo-grid\">\r\n                {props.cards.map((card) => {\r\n                    return (\r\n                        <Card dataCard={card} key={card._id} onCardClick={props.onCardClick}\r\n                              onCardLike={props.onCardLike}\r\n                              onCardDelete={props.onCardDelete}/>)\r\n                })\r\n                }\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","\r\n\r\nfunction Footer(){\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","export const AUTH_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const register = (email, passw) => {\r\n    return fetch(`${AUTH_URL}/signup`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            'email': email,\r\n            \"password\": passw\r\n        })\r\n\r\n    }).then(res => {\r\n        return res.json()\r\n    })\r\n        .then(res => {\r\n            console.log(res);\r\n            return res\r\n        })\r\n\r\n}\r\n\r\nexport const authorize = (login, password) => {\r\n    return fetch(`${AUTH_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({'email': login,\r\n            \"password\": password})\r\n        }\r\n    ).then(res => res.json())\r\n        .then(res => {\r\n            if (res.token){\r\n                localStorage.setItem('jwt', res.token);\r\n                }\r\n        return res\r\n        })\r\n\r\n}\r\n\r\nexport const checkToken = (token) => {\r\n    return fetch(`${AUTH_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`,\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => data)\r\n}","import React from \"react\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { AUTH_URL, authorize} from \"../utils/auth\";\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext.js\";\r\n\r\nfunction Login(props) {\r\n    const [userEmail, setUserEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    let history = useHistory();\r\n\r\n    function handleChangeEmail(e) {\r\n        setUserEmail(e.target.value)\r\n    }\r\n\r\n    function handleChangePassword(e) {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if(!userEmail || !password) {return}\r\n        props.isLogin(userEmail,password).then(data=>{\r\n            if(data.token){\r\n                setUserEmail('');\r\n                setPassword('');\r\n                history.push('/');\r\n\r\n            }\r\n        }).catch(err => console.log(err));\r\n\r\n    }\r\n\r\n   return (\r\n       <div className=\"login\"  >\r\n           <form className=\"login__container\" name=\"login\" id=\"login\" onSubmit={handleSubmit}>\r\n               <h2 className=\"login__title\">Вход</h2>\r\n               <fieldset className=\"popup__inputs\">\r\n                   <input type=\"email\" className=\"login__input_email login__input\" id=\"login__input_email\"\r\n                          value={userEmail}  name=\"email\" placeholder=\"Email\" required onChange={handleChangeEmail}/>\r\n\r\n                   <input type=\"password\" className=\"login__input login__input_password \" minLength=\"4\"\r\n                          maxLength=\"20\" name=\"password\" value={password}\r\n                          id=\"login__input_password\" placeholder=\"Пароль\" required onChange={handleChangePassword}/>\r\n\r\n\r\n                   <button type=\"submit\" className=\"login__btn\" >Войти</button>\r\n               </fieldset>\r\n           </form>\r\n       </div>\r\n   )\r\n\r\n}\r\nexport default Login;","import React from \"react\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext.js\";\r\n\r\nfunction Register(props) {\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    let history = useHistory();\r\n\r\n    function handleChangeEmail(e) {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    function handleChangePassword(e) {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.onRegister(email, password)\r\n        .catch(err=>console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\"  >\r\n            <form className=\"login__container\" name=\"login\" id=\"login\" onSubmit={handleSubmit}>\r\n                <h2 className=\"login__title\">Регистрация</h2>\r\n                <fieldset className=\"login__inputs\">\r\n                    <input type=\"email\" className=\"login__input_email login__input\" id=\"login__input_email\"\r\n                           value={email}  name=\"email\" placeholder=\"Email\" required onChange={handleChangeEmail}/>\r\n\r\n                    <input type=\"password\" className=\"login__input login__input_password\" minLength=\"4\"\r\n                           maxLength=\"20\" name=\"password\" value={password}\r\n                           id=\"login__input_password\" placeholder=\"Пароль\" required onChange={handleChangePassword}/>\r\n\r\n\r\n                    <button type=\"submit\" className=\"login__btn\" >Зарегистрироваться</button>\r\n                </fieldset>\r\n                <p className=\"login__ask\">Уже зарегистрированы? <Link to=\"/signin\" className=\"login__link\">Войти</Link></p>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Register;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n\r\n    React.useEffect(()=>{\r\n    if(props.isOpen){document.addEventListener(\"keydown\", props.onCloseEsc)}\r\n    return (()=>{document.removeEventListener(\"keydown\", props.onCloseEsc)})\r\n})\r\n\r\n\r\n    return (\r\n        <div className={`popup popup_show-pict  ${props.isOpen ? \"popup_opened\" : \"\"}`} onClick={props.onCloseOverlay} >\r\n            <figure className=\"popup__container popup__container_pict-container\">\r\n                <img className=\"popup__fullsize-pict\" src={props.card.link} alt=\"фото\"/>\r\n                <figcaption className=\"popup__pict-title\">{props.card.name}</figcaption>\r\n                <button className=\"popup__close-button\" type=\"button\" title=\"Закрыть\" onClick={props.onClose}></button>\r\n            </figure>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePopup;","import {optionsApi} from \"./constants.js\";\r\n\r\nclass Api {\r\n    constructor(options) {\r\n        this._baseUrl = options.baseUrl;\r\n        this._headers = options.headers;\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this._baseUrl}/users/me `, {\r\n            method: 'GET',\r\n            headers: this._headers\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n    }\r\n\r\n    editUserInfo(valuesFromInput) {\r\n        return fetch(`${this._baseUrl}/users/me `, {\r\n                method: 'PATCH',\r\n                headers: this._headers,\r\n                body: JSON.stringify({\r\n                    name: valuesFromInput.name,\r\n                    about: valuesFromInput.about\r\n                })\r\n            }\r\n        ).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n    }\r\n\r\n    editUserAvatar(valuesFromInput) {\r\n        return fetch(`${this._baseUrl}/users/me/avatar `, {\r\n                method: 'PATCH',\r\n                headers: this._headers,\r\n                body: JSON.stringify({\r\n                    avatar: valuesFromInput.avatar\r\n                })\r\n            }\r\n        ).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            method: 'GET',\r\n            headers: this._headers\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    addCard(valuesFromInput) {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify(\r\n                {\r\n                    name: valuesFromInput.name,\r\n                    link: valuesFromInput.link\r\n                }\r\n            )\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n    }\r\n\r\n    deleteCard(cardID) {\r\n        return fetch(`${this._baseUrl}/cards/${cardID}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n    }\r\n    changeLikeCardStatus(cardID,hasLike) {\r\n        if (hasLike) {return this.likeOff(cardID)} else {return this.likeOn(cardID)}\r\n    }\r\n\r\n    likeOn(cardID) {\r\n        return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\r\n            method: 'PUT',\r\n            headers: this._headers\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n    }\r\n\r\n    likeOff(cardID) {\r\n        return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n    }\r\n}\r\n\r\nconst api = new Api(optionsApi);\r\n\r\nexport default api;\r\n","const config = {\n    formSelector: '.popup__container',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__submit',\n    unactiveButtonClass: 'popup__submit_disactive',\n    errorInputClass: 'popup__input_invalid',\n    errorMssgInactivClass: 'popup__error-msg_inactive',\n    errorMssgClass: 'popup__error-msg',\n    photoGrid: '.photo-grid'\n}\n\nconst optionsApi = {\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-19',\n    headers: {\n        authorization: '47b6d590-a975-406b-afdb-480f171a6854',\n        \"Content-Type\": 'application/json'\n    }\n}\n\n\n\nconst popupHtmlList = {\n    \"addPict\": \"<fieldset className=\\\"popup__inputs\\\">\\n\" +\n        \"<input type=\\\"text\\\" className=\\\"popup__input popup__input_title\\\" minLength=\\\"2\\\" maxLength=\\\"30\\\" name=\\\"name\\\"\\n\" +\n        \"id=\\\"popup__input_title\\\" placeholder=\\\"Название\\\" required />\\n\" +\n        \"<span className=\\\"popup__error-msg\\\" id=\\\"popup__input_title-error\\\"></span>\\n\" +\n        \"<input type=\\\"url\\\" className=\\\"popup__input popup__input_link\\\" id=\\\"popup__input_link\\\" name=\\\"link\\\"\\n\" +\n        \"placeholder=\\\"Ссылка на картинку\\\" required />\\n\" +\n        \"<span className=\\\"popup__error-msg\\\" id=\\\"popup__input_link-error\\\"></span>\\n\" +\n        \"<button type=\\\"submit\\\" className=\\\"popup__submit\\\">Сохранить</button>\\n\" +\n        \"</fieldset>\",\n    \"editAvatar\": \"<fieldset className=\\\"popup__inputs\\\">\\n\" +\n        \"<input type=\\\"url\\\" className=\\\"popup__input popup__input_link\\\" id=\\\"popup__input-editAvatar_link\\\" name=\\\"link\\\"\\n\" +\n        \"placeholder=\\\"Ссылка на картинку\\\" required />\\n\" +\n        \"<span className=\\\"popup__error-msg\\\" id=\\\"popup__input-editAvatar_link-error\\\"></span>\\n\" +\n        \"<button type=\\\"submit\\\" className=\\\"popup__submit\\\">Сохранить</button>\\n\" +\n        \"</fieldset>\",\n    \"editUserInfo\": \"<fieldset class=\\\"popup__inputs\\\">\\n\" +\n        \"      <input type=\\\"text\\\" class=\\\"popup__input popup__input_name\\\" minlength=\\\"2\\\" maxlength=\\\"40\\\" name=\\\"name\\\"\\n\" +\n        \"             id=\\\"popup__input_name\\\" placeholder=\\\"Имя\\\" required>\\n\" +\n        \"      <span class=\\\"popup__error-msg\\\" id=\\\"popup__input_name-error\\\"></span>\\n\" +\n        \"      <input type=\\\"text\\\" class=\\\"popup__input popup__input_about\\\" minlength=\\\"2\\\" maxlength=\\\"200\\\" name=\\\"about\\\"\\n\" +\n        \"             id=\\\"popup__input_about\\\" required\\n\" +\n        \"             placeholder=\\\"Профессия\\\">\\n\" +\n        \"      <span class=\\\"popup__error-msg\\\" id=\\\"popup__input_about-error\\\"></span>\\n\" +\n        \"      <button type=\\\"submit\\\" class=\\\"popup__submit\\\">Сохранить</button>\\n\" +\n        \"    </fieldset>\",\n    \"askDelete\": \"<button type=\\\"submit\\\" className=\\\"popup__submit\\\">Да</button>\"\n\n}\n\nconst template = '.template';\nconst profileNameSelector = '.profile__name';\nconst profileDescrSelector = '.profile__descr';\n\n// для попапа редактирования профиля\nconst popupEditUserProfileSelector = '.popup_edit-user-profile';\nconst buttonOpenPopupEdit = document.querySelector('.profile__edit-button');\n\nconst formEdit = document.querySelector('.popup__container_edit');\nconst nameInput = document.querySelector('.popup__input_name');\nconst aboutInput = document.querySelector('.popup__input_about');\n\n//для попапа редактирования автарки\nconst popupEditAvatarSelector = '.popup_edit-avatar';\nconst buttonOpenPopupEditAvatar = document.querySelector('.profile__avatar-wrap');\nconst avatarPicSelector = '.profile__avatar-pic';\nconst formEditAvatar = document.querySelector('.popup__container_edit-avatar');\n\n// попап удаления\nconst popupAskDeleteSelector = '.popup_ask-delete';\n\n\n// для окна добавления фото\nconst popupAddPictSelector = '.popup_addPict';\nconst buttonOpenPopupAdd = document.querySelector('.profile__add-button');\n\nconst formAdd = document.querySelector('.popup__container_add-photo');\n\n\n//попап фуллсайз картинки\nconst popupShowPictSelector = '.popup_show-pict';\n\nconst page = document.querySelector('.page');\n\n//для InfoTooltip\nconst InfoTooltipConfig = {\n    success: {\n        icon: \"\",\n        text: \"\"\n    },\n    failure: {\n        icon: \"\",\n        text: \"\"\n    },\n    \n}\n\nexport {\n    config, template, buttonOpenPopupEdit,\n    nameInput, aboutInput,\n    buttonOpenPopupAdd, formAdd, formEdit,\n    profileDescrSelector, profileNameSelector, popupEditUserProfileSelector,\n    popupAddPictSelector, popupShowPictSelector, popupEditAvatarSelector, buttonOpenPopupEditAvatar,\n    avatarPicSelector, formEditAvatar, popupAskDeleteSelector, optionsApi, page, popupHtmlList,InfoTooltipConfig\n};","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\r\n    return (\r\n        <Route >\r\n            {\r\n                () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\r\n            }\r\n        </Route>\r\n    )}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\n\r\n\r\nfunction PopupWithForm(props) {\r\nReact.useEffect(()=>{\r\n    if(props.isOpen){document.addEventListener(\"keydown\", props.onCloseEsc)}\r\n    return (()=>{document.removeEventListener(\"keydown\", props.onCloseEsc)})\r\n})\r\n\r\n    return (\r\n        <div className={`popup popup_${props.name}  ${props.isOpen ? \"popup_opened\" : \"\"}`}\r\n             onClick={props.onCloseOverlay} >\r\n            <form className={`popup__container popup__container_${props.name}`} name={props.name} id={props.name}\r\n                  onSubmit={props.onSubmit}>\r\n                <h2 className=\"popup__title\">{props.title}</h2>\r\n                {props.children}\r\n                <button className=\"popup__close-button\" type=\"button\" title=\"Закрыть\" onClick={props.onClose}></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm;","import PopupWithForm from \"./PopupWithForm\";\r\nimport React from 'react';\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext.js\";\r\n\r\nfunction EditProfilePopup(props) {\r\n    const user = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState(\"\");\r\n    const [description, setDescription] = React.useState(\"\");\r\n    React.useEffect(() => {\r\n        setName(user.name);\r\n        setDescription(user.about);\r\n    }, [user]);\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleDescription(e) {\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdateUser({\r\n            name,\r\n            about: description,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm title='Редактировать профиль' name='edit-user-profile' isOpen={props.isOpen}\r\n                       onClose={props.onClose} onCloseEsc={props.onCloseEsc} onCloseOverlay={props.onCloseOverlay}\r\n                       onSubmit={handleSubmit}>\r\n            <fieldset className=\"popup__inputs\">\r\n                <input type=\"text\" className=\"popup__input popup__input_name\" minLength=\"2\" maxLength=\"40\"\r\n                       name=\"name\"\r\n                       id=\"popup__input_name\" placeholder=\"Имя\" required onChange={handleChangeName} value={name}/>\r\n                <span className=\"popup__error-msg\" id=\"popup__input_name-error\"></span>\r\n                <input type=\"text\" className=\"popup__input popup__input_about\" minLength=\"2\" maxLength=\"200\"\r\n                       name=\"about\"\r\n                       id=\"popup__input_about\" required\r\n                       placeholder=\"Профессия\" onChange={handleDescription} value={description}/>\r\n                <span className=\"popup__error-msg\" id=\"popup__input_about-error\"></span>\r\n                <button type=\"submit\" className=\"popup__submit\">{props.btnText}</button>\r\n            </fieldset>\r\n\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup;\r\n\r\n","import PopupWithForm from \"./PopupWithForm\";\r\nimport React from 'react';\r\n\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const inputRef = React.useRef();\r\n\r\n\r\n    React.useEffect(()=>{\r\n        if(!props.isOpen) {\r\n            inputRef.current.value='';\r\n        }\r\n    },[props.isOpen])\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdateAvatar({avatar: inputRef.current.value});\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <PopupWithForm title='Обновить аватар' name='editAvatar' isOpen={props.isOpen}\r\n                       onClose={props.onClose} onSubmit={handleSubmit} onCloseEsc={props.onCloseEsc}\r\n                       onCloseOverlay={props.onCloseOverlay} >\r\n            <fieldset className=\"popup__inputs\">\r\n                <input type=\"url\" className=\"popup__input popup__input_link\"\r\n                       id=\"popup__input-editAvatar_link\" name=\"link\"\r\n                       placeholder=\"Ссылка на картинку\" required ref={inputRef}/>\r\n                <span className=\"popup__error-msg\" id=\"popup__input-editAvatar_link-error\"></span>\r\n                <button type=\"submit\" className=\"popup__submit\">{props.btnText}</button>\r\n            </fieldset>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import PopupWithForm from \"./PopupWithForm\";\r\nimport React from 'react';\r\n\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n    const [namePlace, setNamePlace] = React.useState('');\r\n    const [link, setLink] = React.useState('');\r\n    React.useEffect(\r\n        () => {\r\n            if (!props.isOpen) {\r\n                setNamePlace('');\r\n                setLink('');\r\n            }\r\n        },[props.isOpen]\r\n    )\r\n\r\n    function handleChangeName(e) {\r\n        setNamePlace(e.target.value)\r\n    }\r\n\r\n    function handleChangeLink(e) {\r\n        setLink(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onAddPlace({\r\n            namePlace,\r\n            link\r\n        });\r\n        props.onClose();\r\n        setNamePlace('');\r\n        setLink('');\r\n    }\r\n\r\n\r\n    return (\r\n        <PopupWithForm title='Новое место' name='addPict' isOpen={props.isOpen} onClose={props.onClose}\r\n                       onSubmit={handleSubmit} onCloseEsc={props.onCloseEsc} onCloseOverlay={props.onCloseOverlay}>\r\n            <fieldset className=\"popup__inputs\">\r\n                <input type=\"text\" className=\"popup__input popup__input_title\" minLength=\"2\"\r\n                       maxLength=\"30\" name=\"name\" value={namePlace}\r\n                       id=\"popup__input_title\" placeholder=\"Название\" required onChange={handleChangeName}/>\r\n                <span className=\"popup__error-msg\" id=\"popup__input_title-error\"></span>\r\n                <input type=\"url\" className=\"popup__input popup__input_link\" id=\"popup__input_link\"\r\n                       value={link}\r\n                       name=\"link\" placeholder=\"Ссылка на картинку\" required onChange={handleChangeLink}/>\r\n                <span className=\"popup__error-msg\" id=\"popup__input_link-error\"></span>\r\n                <button type=\"submit\" className=\"popup__submit\">{props.btnText}</button>\r\n            </fieldset>\r\n        </PopupWithForm>\r\n    )\r\n\r\n}\r\n\r\nexport default AddPlacePopup;","import PopupWithForm from \"./PopupWithForm\";\r\nimport React from 'react';\r\n\r\n\r\nfunction AskDeletePopup(props) {\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onDeleteSubmit();\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm title='Вы уверены?' name='ask-delete' isOpen={props.isOpen}\r\n                       onClose={props.onClose} onSubmit={handleSubmit} onCloseEsc={props.onCloseEsc}\r\n                       onCloseOverlay={props.onCloseOverlay}>\r\n            <fieldset className=\"popup__inputs\">\r\n\r\n                <button type=\"submit\" className=\"popup__submit\">Да</button>\r\n            </fieldset>\r\n\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AskDeletePopup;\r\n\r\n","import React from 'react';\r\n\r\nfunction InfoTooltip(props) {\r\n\r\n    React.useEffect(() => {\r\n        if (props.isOpen) {\r\n            document.addEventListener(\"keydown\", handleEscClose);\r\n            console.log(props.message);\r\n        }\r\n        return (() => {\r\n            document.removeEventListener(\"keydown\", handleEscClose)\r\n        })\r\n    })\r\nfunction handleEscClose(event) {\r\n    if (event.key === \"Escape\") {\r\n        props.onClose();\r\n    }\r\n\r\n}\r\n    function onOverlayClose(event) {\r\n        if (event.target.classList.contains('popup_opened')) {\r\n            props.onClose();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`popup popup_InfoTooltip  ${props.isOpen ? \"popup_opened\" : \"\"}`}\r\n             onClick={onOverlayClose}>\r\n            <div className=\"popup__container popup__container_InfoTooltip\">\r\n                <div className={`popup__icon ${props.success ? \"popup__icon_success\" : \"popup__icon_failure\"}`}></div>\r\n                <p className=\"popup__textInfo\">{ props.success ? props.message.success : props.message.failure }</p>\r\n                <button className=\"popup__close-button popup__close-button_InfoTooltip\" type=\"button\" title=\"Закрыть\" onClick={props.onClose}></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoTooltip;","import '../App.css';\n\nimport Header from './Header';\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\n\nimport ImagePopup from \"./ImagePopup\";\nimport React from 'react';\nimport {\n    Switch, Route, useParams, Link, Redirect, useHistory\n} from \"react-router-dom\";\n\nimport api from \"../utils/api\";\nimport * as auth from \"../utils/auth\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport AskDeletePopup from \"./AskDeletePopup\";\nimport InfoTooltip from \"./InfoTooltip\";\n\n\n\nfunction App() {\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isDeletePopupOpen, setIsDeletePopupOpen] = React.useState(false);\n    const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n    const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({});\n    const [currentUser, setCurrentUser] = React.useState({\n        name: \"\",\n        avatar: \"\",\n        about: \"\"\n    });\n    const toolTipMessage = {\n        success: 'Вы успешно зарегистрировались!',\n        failure: 'Что-то пошло не так!Попробуйте ещё раз.'\n    }\n    const [cards, setCards] = React.useState([]);\n    const [classPageLoad, setClassPageLoad] = React.useState('hidden');\n    const [btnLoader, setBtnLoader] = React.useState('Сохранить');\n    const [loggedIn, setLoggedIn] = React.useState('');\n    const [resRegistration, setResRegistration] = React.useState('');\n    const [messageToolTip, setMessageToolTip] = React.useState(toolTipMessage);\n    const [userEmail, setUserEmail] = React.useState('');\n\n    const history = useHistory();\n\n\n    React.useEffect(() => {\n            setClassPageLoad('hidden');\n            handleTokenCheck();\n            Promise.all([api.getInitialCards(), api.getUserInfo()]).then((data) => {\n                setCards(data[0]);\n                setCurrentUser(data[1])\n            })\n                .catch(err => console.log(err))\n                .finally(() => setClassPageLoad('visible'))\n        }, []\n    );\n\n    function handleRegister(email, password) {\n        return auth.register(email, password).then(res => {\n            setMessageToolTip(toolTipMessage);\n            if (!res || res.statusCode === 400) {\n                setResRegistration(false);\n                throw new Error('что-то не так пошло')\n            } else {\n                setResRegistration(true);\n                history.push('/signin')\n            }\n\n            setIsInfoTooltipOpen(true);\n\n        }).catch(err => console.log(err));\n    }\n\n    function handleCloseInfoTooltip() {\n        setIsInfoTooltipOpen(false);\n    }\n\n    function handleLogin(login, password) {\n        return auth.authorize(login, password)\n            .then(data => {\n                console.log(data);\n                if (!data.token) {\n                    setMessageToolTip({failure:data.message});\n                    console.log(messageToolTip);\n                    setResRegistration(false);\n                    setIsInfoTooltipOpen(true);\n                    return  data;\n                }\n                setUserEmail(login);\n                setLoggedIn(true);\n                return data;\n            })\n\n    }\n\n    function handleClickOut() {\n        localStorage.removeItem('jwt');\n        setLoggedIn(false)\n    }\n\n    function handleTokenCheck() {\n        if (localStorage.getItem('jwt')) {\n            const jwt = localStorage.getItem('jwt');\n            auth.checkToken(jwt).then(\n                res => {\n                    console.log(res);\n                    setUserEmail(res.data.email);\n                    setLoggedIn(true);\n                    history.push('/')\n                }\n            ).catch(err => console.log(err))\n        }\n\n    }\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        api.changeLikeCardStatus(card._id, isLiked)\n            .then(newCard => {\n                const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                setCards(newCards);\n            }).catch((err) => console.log(err));\n    }\n\n    function handleDeleteClick(card) {\n        setSelectedCard(card);\n        setIsDeletePopupOpen(true);\n\n    }\n\n    function handleDeleteSubmit() {\n        api.deleteCard(selectedCard._id)\n            .then(() => setCards(cards.filter(c => c._id !== selectedCard._id)))\n            .then(() => closeAllPopups())\n            .catch((err) => console.log(err));\n\n    }\n\n\n    const handleEditAvatarClick = () => {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    const handleEditProfileClick = () => {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    const handleAddPlaceClick = () => {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    const handleCardClick = (card) => {\n        setSelectedCard(card);\n        setIsImagePopupOpen(true)\n    }\n\n    const closeAllPopups = () => {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsDeletePopupOpen(false);\n        setSelectedCard({});\n        setIsImagePopupOpen(false);\n        setIsInfoTooltipOpen(false);\n    }\n\n    const handleEscClick = (event) => {\n        if (event.key === \"Escape\") {\n            closeAllPopups();\n        }\n    }\n\n    const handleOverlayClick = (event) => {\n        if (event.target.classList.contains('popup_opened')) {\n            closeAllPopups();\n        }\n    }\n\n\n    const handleUpdateUser = ({name, about}) => {\n        setBtnLoader('Сохранение...');\n        api.editUserInfo({name, about})\n            .then((res) =>\n                setCurrentUser(res))\n                    .then(() => {\n                        closeAllPopups();\n                        setBtnLoader('Сохранить')\n                    })\n                    .catch((err) => console.log(err));\n\n\n    }\n\n    const handleUpdateAvatar = ({avatar}) => {\n        setBtnLoader('Сохранение...');\n        api.editUserAvatar({avatar}).then((res) => {\n            setCurrentUser(res);\n            closeAllPopups();\n            setBtnLoader('Сохранить');\n        })\n    }\n\n    const handleAddPlaceSubmit = ({namePlace, link}) => {\n        setBtnLoader('Сохранение...');\n        api.addCard({name: namePlace, link: link})\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n                setTimeout(() => setBtnLoader('Сохранить'), 2000);\n            })\n    }\n\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className={`page ${classPageLoad}`}>\n                <div className=\"page__wrap\">\n                    <Header userEmail={userEmail} onOutClick={handleClickOut}/>\n                    <Switch>\n                        <ProtectedRoute exact path=\"/\"\n                                        loggedIn={loggedIn}\n                                        component={Main} onEditProfile={handleEditProfileClick}\n                                        onAddPlace={handleAddPlaceClick}\n                                        onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} cards={cards}\n                                        onCardLike={handleCardLike} onCardDelete={handleDeleteClick}/>\n                        <Route path=\"/signin\">\n                            <Login isLogin={handleLogin}/>\n                        </Route>\n                        <Route path=\"/signup\">\n                            <Register onRegister={handleRegister}/>\n                        </Route>\n                        <Route path=\"*\">\n                            {loggedIn ? <Redirect to=\"/\"/> : <Redirect to=\"/signin\"/>}\n                        </Route>\n\n                    </Switch>\n                    {/*<Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}*/}\n                    {/*      onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} cards={cards}*/}\n                    {/*      onCardLike={handleCardLike} onCardDelete={handleDeleteClick}/>*/}\n                    {loggedIn === true && <Footer/>}\n                </div>\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\n                                  onCloseEsc={handleEscClick} onCloseOverlay={handleOverlayClick}\n                                  onUpdateUser={handleUpdateUser} btnText={btnLoader}/>\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\n                                 onCloseEsc={handleEscClick} onCloseOverlay={handleOverlayClick}\n                                 onUpdateAvatar={handleUpdateAvatar} btnText={btnLoader}/>\n\n                <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit}\n                               onCloseEsc={handleEscClick} onCloseOverlay={handleOverlayClick}\n                               btnText={btnLoader}/>\n                <AskDeletePopup isOpen={isDeletePopupOpen} onClose={closeAllPopups}\n                                onCloseEsc={handleEscClick} onCloseOverlay={handleOverlayClick}\n                                onDeleteSubmit={handleDeleteSubmit}/>\n\n                <ImagePopup card={selectedCard}\n                            isOpen={isImagePopupOpen}\n                            onClose={closeAllPopups}\n                            onCloseEsc={handleEscClick}\n                            onCloseOverlay={handleOverlayClick}/>\n\n                <InfoTooltip success={resRegistration}\n                             isOpen={isInfoTooltipOpen}\n                             onClose={handleCloseInfoTooltip}\n                             message={messageToolTip}\n                />\n\n            </div>\n        </CurrentUserContext.Provider>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}